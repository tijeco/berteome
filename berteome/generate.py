# AUTOGENERATED! DO NOT EDIT! File to edit: ../notebooks/final/02_generate_sequences.ipynb.

# %% auto 0
__all__ = ['top_k_variants', 'n_random_seqs']

# %% ../notebooks/final/02_generate_sequences.ipynb 1
import pandas as pd
import numpy as np

# %% ../notebooks/final/02_generate_sequences.ipynb 3
def top_k_variants(berteome, k):
  seqList = list(berteome.df["wt"])
  variantDict = {}
  for index, row in berteome.df.iterrows():
    aa_scores = row[list(berteome.aas)]
    top_k_scores = aa_scores.where(aa_scores.index != row["wt"]).sort_values(ascending=False).head(k)
    top_k_subs = list(top_k_scores.index)
    for res in top_k_subs:
      seqCopy = seqList.copy()
      seqCopy[index] = res
      variantDict[f"{index}sub{res}"] =''.join(seqCopy)
  return pd.DataFrame.from_dict(variantDict, orient = "index", columns = ["seq"]).rename_axis("sub").reset_index()


# %% ../notebooks/final/02_generate_sequences.ipynb 4
def n_random_seqs(berteome, n):
  randomSeqDict = {"seq":[],"score":[]}
  for i in range(n):
    randomSeq = []
    randomSeqScore = 0
    for index, row in berteome.df.iterrows():
      aa_probs = row[list(berteome.aas)]
      random_aa = np.random.choice(list(berteome.aas), 1, list(aa_probs))
      random_aa_score = row[random_aa]
      randomSeq += random_aa[0]
      randomSeqScore += random_aa_score[0]
    randomSeqDict["seq"].append(''.join(randomSeq))
    randomSeqDict["score"].append(randomSeqScore/len(berteome.df))
  return pd.DataFrame.from_dict(randomSeqDict)
  

